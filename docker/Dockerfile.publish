FROM --platform=$BUILDPLATFORM sinamics/debian-uavcast-base:latest as main
ARG TARGETPLATFORM
ARG BUILDPLATFORM

LABEL maintainer="Bernt Christian Egeland / uavmatrix.com"

RUN echo "I am running on $BUILDPLATFORM, building for $TARGETPLATFORM"

WORKDIR /app/uavcast

ARG USERNAME=uavcast
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Create the user
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \
    #
    # [Optional] Add sudo support. Omit if you don't need to install software after connecting.
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

COPY ["bin", "./bin"]
COPY ["docker", "./docker"]
COPY ["frontend/build", "./frontend/build"]
COPY ["backend", "./backend"]

# systemctl3
COPY init/systemctl3.py /bin/systemctl
COPY init/systemctl3.py /bin/systemctl3.py
COPY init/journalctl3.py /bin/journalctl

RUN chmod +x -R ./docker/bin \
                ./bin/build \
                ./bin/mavlink \
                ./bin/python \
                /bin/systemctl \
                /bin/systemctl3.py \
                /bin/journalctl

RUN sudo touch /var/run/docker.sock
RUN sudo chmod 666 /var/run/docker.sock

# #changes the ownership of /var/run/docker.sock
RUN sudo chown uavcast:docker /var/run/docker.sock

#gives uavcast user permissions to access /var/run/docker.sock
RUN sudo usermod -a -G docker root

ENV NODE_ENV=production

RUN ["/app/uavcast/docker/bin/./prod-build.sh"]

# Make sure we set the webport stored in the database, if user uses another port than standard 80
# ENTRYPOINT ["/bin/systemctl"]

# ENTRYPOINT ["/app/uavcast/docker/bin/entrypoint.sh"]
# CMD ["/bin/systemctl"]
ENTRYPOINT ["tail", "-f", "/dev/null"]