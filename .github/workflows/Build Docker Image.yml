name: ci
on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build_app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Required due to the weg Git works, without it this action won't be able to find any or the correct tags
          submodules: true

      - name: install cppunit
        run: sudo apt install -y libcppunit-dev libjsoncpp-dev libv4l-dev libgstreamer1.0-dev libcurl4-nss-dev sqlite3 libsqlite3-dev
      - name: make binaries
        run: make -C bin/

      - name: Cache npm modules
        uses: actions/cache@v2
        env:
          cache-name: cache-frontend-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install backend dependencies
        run: cd backend && npm install

      - name: Install frontend dependecies
        run: cd frontend && npm install

      - name: backend lint
        run: cd backend && npm run lint

      - name: frontend lint
        run: cd frontend && npm run lint

      - name: Build Backend
        run: cd backend && npm run build

      - name: Build frontend
        run: cd frontend && npm run build

      - name: 'Get Previous tag'
        id: previoustag
        uses: 'WyriHaximus/github-action-get-previous-tag@v1'
        with:
          fallback: 5.0.0 # Optional fallback tag to use when no tag can be found

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker-container
          driver-opts: |
            image=moby/buildkit:master
            network=host
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile.publish
          platforms: linux/arm,linux/arm64,linux/amd64
          push: true
          tags: sinamics/uavcast:${{ steps.previoustag.outputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
